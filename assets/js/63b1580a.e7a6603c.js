"use strict";(self.webpackChunkhyperfy_docs=self.webpackChunkhyperfy_docs||[]).push([[2367],{3366:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>h,contentTitle:()=>r,default:()=>d,frontMatter:()=>s,metadata:()=>c,toc:()=>a});var o=t(4848),i=t(8453);const s={},r="useEth()",c={id:"developers/hooks/use-eth",title:"useEth()",description:"A utility hook for requesting payment or reading and writing to a contract on the blockchain.",source:"@site/docs/developers/hooks/use-eth.md",sourceDirName:"developers/hooks",slug:"/developers/hooks/use-eth",permalink:"/hyperfy-docs/docs/developers/hooks/use-eth",draft:!1,unlisted:!1,editUrl:"https://github.com/madjin/hyperfy-docs/tree/main/docs/developers/hooks/use-eth.md",tags:[],version:"current",lastUpdatedBy:"Knar",lastUpdatedAt:1710971397e3,frontMatter:{},sidebar:"developers",previous:{title:"useEntityUid()",permalink:"/hyperfy-docs/docs/developers/hooks/use-entity-uid"},next:{title:"useFields()",permalink:"/hyperfy-docs/docs/developers/hooks/use-fields"}},h={},a=[];function l(n){const e={code:"code",h1:"h1",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.h1,{id:"useeth",children:(0,o.jsx)(e.code,{children:"useEth()"})}),"\n",(0,o.jsx)(e.p,{children:"A utility hook for requesting payment or reading and writing to a contract on the blockchain."}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.strong,{children:"useEth(chainName)"})}),"\n",(0,o.jsxs)(e.p,{children:["Returns an instance of ",(0,o.jsx)(e.code,{children:"Eth"})]}),"\n",(0,o.jsxs)(e.p,{children:[(0,o.jsx)(e.code,{children:"chainName"})," can be one of ",(0,o.jsx)(e.code,{children:"ethereum"}),", ",(0,o.jsx)(e.code,{children:"optimism"}),", ",(0,o.jsx)(e.code,{children:"arbitrum"}),", ",(0,o.jsx)(e.code,{children:"polygon"})," or ",(0,o.jsx)(e.code,{children:"goerli"}),". If none specified, defaults to ",(0,o.jsx)(e.code,{children:"ethereum"}),"."]}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.strong,{children:"Eth.getChain()"})}),"\n",(0,o.jsx)(e.p,{children:"Returns info about the chain the current user is connected to, or null if they are not connected."}),"\n",(0,o.jsx)(e.p,{children:"This is useful to check that the user is connected to the correct network before calling a contract or making a payment."}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.strong,{children:"Eth.sign(message)"})}),"\n",(0,o.jsxs)(e.p,{children:["Returns a ",(0,o.jsx)(e.code,{children:"Promise"})," that resolves with the signature ",(0,o.jsx)(e.code,{children:"String"})," once the user signs using their wallet."]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-jsx",children:'import React from "react";\n//highlight-next-line\nimport { useEth } from "hyperfy";\n\nexport default function App() {\n  //highlight-next-line\n  const eth = useEth();\n  async function signEth() {\n    //highlight-next-line\n    const chainInfo = await eth.getChain();\n    if (chainInfo) {\n      console.log(chainInfo);\n      //highlight-next-line\n      const signature = await eth.sign("Howdy Ethereum!");\n      console.log(signature);\n    }\n  }\n\n  //highlight-next-line\n  const op = useEth("optimism");\n  async function signOp() {\n    //highlight-next-line\n    const chainInfo = await op.getChain();\n    if (chainInfo) {\n      console.log(chainInfo);\n      //highlight-next-line\n      const signature = await op.sign("Howdy Optimism!");\n      console.log(signature);\n    }\n  }\n\n  return (\n    <app>\n      <text\n        color="white"\n        position={[0, 0, 0]}\n        value="Sign Ethereum"\n        onPointerDown={signEth}\n      />\n      <text\n        color="white"\n        position={[2, 0, 0]}\n        value="Sign Optimism"\n        onPointerDown={signOp}\n      />\n    </app>\n  );\n}\n'})}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.strong,{children:"Eth.pay(address, amountInWei)"})}),"\n",(0,o.jsx)(e.p,{children:"Requests the user to make a payment to an address."}),"\n",(0,o.jsxs)(e.p,{children:["Returns a ",(0,o.jsx)(e.code,{children:"Promise"})," that resolves with a ",(0,o.jsx)(e.code,{children:"Transaction"})," instance."]}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.strong,{children:"Eth.toWei(amountInEth)"})}),"\n",(0,o.jsxs)(e.p,{children:["Converts an eth string to wei. Returns a ",(0,o.jsx)(e.code,{children:"String"}),"."]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-jsx",children:'import React from "react";\n//highlight-next-line\nimport { useEth } from "hyperfy";\n\nconst WALLET = "0xf53b18570db14c1e7dbc7dc74538c48d042f1332"; //Hyperfy worlds contract\nconst ETH_AMOUNT = "0.69";\n\nexport default function App() {\n  //highlight-next-line\n  const eth = useEth();\n\n  async function payEth() {\n    if (await eth.getChain()) {\n      //highlight-next-line\n      const amount = eth.toWei(ETH_AMOUNT);\n      //highlight-next-line\n      const tx = await eth.pay(WALLET, amount);\n      //highlight-next-line\n      await tx.wait();\n    }\n  }\n\n  return (\n    <app>\n      <text\n        color="white"\n        position={[0, 0, 0]}\n        value="Pay Hyperfy"\n        onPointerDown={payEth}\n      />\n    </app>\n  );\n}\n'})}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.strong,{children:"Eth.contract(address[, abi])"})}),"\n",(0,o.jsxs)(e.p,{children:["Returns an instance of ",(0,o.jsx)(e.code,{children:"Contract"})," for the specified address."]}),"\n",(0,o.jsx)(e.p,{children:"If no ABI is specified we will automatically load it for you. Providing your own ABI is useful to improve speed or when the ABI can't be loaded automatically."}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.strong,{children:"Contract.read(method, ...args)"})}),"\n",(0,o.jsxs)(e.p,{children:["Returns a ",(0,o.jsx)(e.code,{children:"Promise"})," that resolves with the result of the read method."]}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.strong,{children:"Contract.write(method, ...args)"})}),"\n",(0,o.jsxs)(e.p,{children:["Returns a ",(0,o.jsx)(e.code,{children:"Promise"})," that resolves with a ",(0,o.jsx)(e.code,{children:"Transaction"})]}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.strong,{children:"Transaction.wait()"})}),"\n",(0,o.jsxs)(e.p,{children:["Returns a ",(0,o.jsx)(e.code,{children:"Promise"})," that resolves once the transaction is confirmed on the blockchain."]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-jsx",children:'import React, { useMemo } from "react";\n//highlight-next-line\nimport { useEth } from "hyperfy";\n\nconst WALLET = "0xf53b18570db14c1e7dbc7dc74538c48d042f1332"; //Hyperfy worlds contract\nconst MINT_PRICE = "0.06";\n\nexport default function App() {\n  //highlight-next-line\n  const eth = useEth();\n  //highlight-next-line\n  const contract = useMemo(() => eth.contract(WALLET), []);\n\n  async function getBalance() {\n    if (await eth.getChain()) {\n      //highlight-next-line\n      const balance = await contract.read("balanceOf");\n      console(`Balance: ${balance}`);\n    }\n  }\n\n  async function mintWorld() {\n    if (await eth.getChain()) {\n      //highlight-next-line\n      const tx = await contract.write("mint", 1, {\n        value: eth.toWei(MINT_PRICE),\n      });\n      console.log("Verifying...");\n      //highlight-next-line\n      await tx.wait();\n      console.log("Minted!");\n    }\n  }\n\n  return (\n    <app>\n      <text\n        color="white"\n        position={[0, 0, 0]}\n        value="Hyperfy Worlds Balance"\n        onPointerDown={getBalance}\n      />\n      <text\n        color="white"\n        position={[2, 0, 0]}\n        value="Mint Hyperfy World"\n        onPointerDown={mintWorld}\n      />\n    </app>\n  );\n}\n'})})]})}function d(n={}){const{wrapper:e}={...(0,i.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(l,{...n})}):l(n)}},8453:(n,e,t)=>{t.d(e,{R:()=>r,x:()=>c});var o=t(6540);const i={},s=o.createContext(i);function r(n){const e=o.useContext(s);return o.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:r(n.components),o.createElement(s.Provider,{value:e},n.children)}}}]);